<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net45;net47</TargetFrameworks>
    <LangVersion>latest</LangVersion>
    <PackageId>MSTestEnhancer</PackageId>
    <Authors>erdao;walterlv</Authors>
    <RepositoryUrl>https://github.com/easiwin/MSTestEnhancer.git</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <PackageProjectUrl>https://easiwin.github.io/mstest-enhancer</PackageProjectUrl>
    <PackageIconUrl>https://easiwin.github.io/mstest-enhancer/icon.png</PackageIconUrl>
    <PackageLicenseUrl>https://github.com/easiwin/MSTestEnhancer/blob/master/LICENSE</PackageLicenseUrl>
    <Copyright>Copyright (c) 2018 dotnet职业技术学院</Copyright>
    <PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
    <Version>1.2.0</Version>
    <Description>MSTestEnhancer helps you to write unit tests without naming any method. You can write method contract descriptions instead of writing confusing test method name when writing unit tests.</Description>
    <PackageReleaseNotes>1. Add more test status support. Now it covers almost all available test status.
2. Add tips for incorrect test case code.</PackageReleaseNotes>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|AnyCPU'">
    <DocumentationFile></DocumentationFile>
  </PropertyGroup>

  <PropertyGroup>
    <OutputPath>..\..\bin\$(Configuration)\</OutputPath>
    <DocumentationFile>..\..\bin\$(Configuration)\$(TargetFramework)\MSTest.Extensions.xml</DocumentationFile>
  </PropertyGroup>

  <ItemGroup>
    <Compile Update="Contracts\ContractTest.01.cs" AutoGen="True" DependentUpon="ContractTest.cs" />
    <Compile Update="Contracts\ContractTest.02.cs" AutoGen="True" DependentUpon="ContractTest.cs" />
    <Compile Update="Contracts\ContractTest.03.cs" AutoGen="True" DependentUpon="ContractTest.cs" />
    <Compile Update="Contracts\ContractTest.04.cs" AutoGen="True" DependentUpon="ContractTest.cs" />
    <Compile Update="Contracts\ContractTest.05.cs" AutoGen="True" DependentUpon="ContractTest.cs" />
    <Compile Update="Contracts\ContractTest.06.cs" AutoGen="True" DependentUpon="ContractTest.cs" />
    <Compile Update="Contracts\ContractTest.07.cs" AutoGen="True" DependentUpon="ContractTest.cs" />
    <Compile Update="Contracts\ContractTest.08.cs" AutoGen="True" DependentUpon="ContractTest.cs" />
    <Compile Update="Contracts\ContractTestContext.01.cs" AutoGen="True" DependentUpon="ContractTestContext.cs" />
    <Compile Update="Contracts\ContractTestContext.02.cs" AutoGen="True" DependentUpon="ContractTestContext.cs" />
    <Compile Update="Contracts\ContractTestContext.03.cs" AutoGen="True" DependentUpon="ContractTestContext.cs" />
    <Compile Update="Contracts\ContractTestContext.04.cs" AutoGen="True" DependentUpon="ContractTestContext.cs" />
    <Compile Update="Contracts\ContractTestContext.05.cs" AutoGen="True" DependentUpon="ContractTestContext.cs" />
    <Compile Update="Contracts\ContractTestContext.06.cs" AutoGen="True" DependentUpon="ContractTestContext.cs" />
    <Compile Update="Contracts\ContractTestContext.07.cs" AutoGen="True" DependentUpon="ContractTestContext.cs" />
    <Compile Update="Contracts\ContractTestContext.08.cs" AutoGen="True" DependentUpon="ContractTestContext.cs" />
  </ItemGroup>

  <!--EXTERNAL_PROPERTIES: TargetFramework-->
  <ItemGroup Condition="'$(TargetFramework)'=='net45'">
    <PackageReference Include="System.ValueTuple" Version="4.4.0" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="MSTest.TestFramework" Version="1.2.0" />
  </ItemGroup>

</Project>
